<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>plato on Inductive Bias</title><link>https://blog.isabel-drost.de/tags/plato/</link><description>Recent content in plato on Inductive Bias</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 22 Jan 2012 06:39:11 +0100</lastBuildDate><atom:link href="https://blog.isabel-drost.de/tags/plato/index.xml" rel="self" type="application/rss+xml"/><item><title>Scrum done wrong</title><link>https://blog.isabel-drost.de/scrum-done-wrong-scrum-done-wrong-scrum-done-wrong343/</link><pubDate>Sun, 22 Jan 2012 06:39:11 +0100</pubDate><guid>https://blog.isabel-drost.de/scrum-done-wrong-scrum-done-wrong-scrum-done-wrong343/</guid><description>Scrum done wrong # “Agile and Lean have a single purpose: to continually challenge the status quo. If you’re not doing that, you’re probably an impediment to it.” agile42.com
Judging from the way some people become overly careful when discussing agile in general and Scrum in particular in my presence I seem to slowly have built up a reputation for being a strong proponent of these methods. Given the large number of flaky implementations as well as misunderstandings it seems to have become fashionable to blame Scrum for all badness and dismiss it altogether - up to the point where developers are proud to finally having abandoned Scrum completely - so that now they can work in iterations, accept new tasks only for upcoming but not for the current iteration, develop in a test-driven way, have daily sync meetings, mark tasks done only when they are delivered to and accepted by the customer, have regular “how to improve our work” meetings, estimate tasks in story points and only plan for as much work per iteration as was done in the past iteration</description></item></channel></rss>