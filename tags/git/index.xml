<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on Inductive Bias</title><link>https://blog.isabel-drost.de/tags/git/</link><description>Recent content in git on Inductive Bias</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 05 Sep 2012 20:34:14 +0200</lastBuildDate><atom:link href="https://blog.isabel-drost.de/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>FrOSCon - Git Goodies</title><link>https://blog.isabel-drost.de/froscon-git-goodies193/</link><pubDate>Wed, 05 Sep 2012 20:34:14 +0200</pubDate><guid>https://blog.isabel-drost.de/froscon-git-goodies193/</guid><description>FrOSCon - Git Goodies # In his talk on Git Goodies Sebastian Harl introduced not only some of the lesser known git tooling but also gave a brief introduction as to how git organises its database. Starting with an explanation of how patches essentially are treated as blobs identified by SHA1 hashes (thus avoiding duplication not only in the local database but allover the git universe), pointed to by trees that are in turn generated and extended by commits that are in turn referenced by branches (updates on new commits) and tags (don&amp;rsquo;t update on new commits).</description></item><item><title>Second steps with git</title><link>https://blog.isabel-drost.de/second-steps-with-git362/</link><pubDate>Sun, 22 Apr 2012 20:34:46 +0200</pubDate><guid>https://blog.isabel-drost.de/second-steps-with-git362/</guid><description>Second steps with git # Leaving this here in case I&amp;rsquo;ll search for it later again - and I&amp;rsquo;m pretty sure I will.
The following is a simplification of the git workflow detailed earlier - in particular the first two steps and a little background.
When dealing with remotes the git remote documentation is very useful.
When sharing your changes with others the git tutorial on sharing changes is very helpful.</description></item><item><title>First steps with git</title><link>https://blog.isabel-drost.de/first-steps-with-git177/</link><pubDate>Sat, 30 Oct 2010 19:47:00 +0200</pubDate><guid>https://blog.isabel-drost.de/first-steps-with-git177/</guid><description>First steps with git # A few weeks ago I started to use git not only for tracking changes in my own private repository but also for Mahout development and for reviewing patches. My setup probably is a bit unusual, so I thought, I&amp;rsquo;d first describe that before diving deeper into the specifc steps.
Workflow to implement
With my development I wanted to follow Mahout trunk very closely, integrating and merging any changes as soon as I continue to work on the code.</description></item><item><title>Converting a git repo to svn</title><link>https://blog.isabel-drost.de/converting-a-git-repo-to-svn144/</link><pubDate>Mon, 17 Aug 2009 10:15:20 +0200</pubDate><guid>https://blog.isabel-drost.de/converting-a-git-repo-to-svn144/</guid><description>Converting a git repo to svn # Pretty unlikely though it may seem, but there are cases when one might want to convert a git repo to svn and still keep all revisions intact. There is a nice explanation online on how to do that in the Google Open Source blog.</description></item></channel></rss>