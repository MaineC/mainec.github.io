<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Inductive Bias</title><link>https://blog.isabel-drost.de/tags/Java/</link><description>Recent content in Java on Inductive Bias</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 23 May 2013 20:38:57 +0200</lastBuildDate><atom:link href="https://blog.isabel-drost.de/tags/Java/index.xml" rel="self" type="application/rss+xml"/><item><title>JAX: Tales from production</title><link>https://blog.isabel-drost.de/jax-tales-from-production246/</link><pubDate>Thu, 23 May 2013 20:38:57 +0200</pubDate><guid>https://blog.isabel-drost.de/jax-tales-from-production246/</guid><description>JAX: Tales from production # In a second presentation Peter RoÃbach together with Andreas Schmidt provided
some more detail on what the topic logging entails in real world projects.
Development messages turn into valuable information needed to uncover issues
and downtime of systems, capacity planning, measuring the effect of software
changes, analysing resource usage under real world usage. In addition to these
technical use cases there is a need to provide business metrics.</description></item><item><title>JAX: Logging best practices</title><link>https://blog.isabel-drost.de/jax-logging-best-practices243/</link><pubDate>Wed, 22 May 2013 20:37:59 +0200</pubDate><guid>https://blog.isabel-drost.de/jax-logging-best-practices243/</guid><description>JAX: Logging best practices # The ideal outcome of Peter RoÃbach&amp;rsquo;s talk on logging best practices was to have
attendees leave the room thinking ``we know all this already and are applying
it successfully&amp;rsquo;&amp;rsquo; - most likely though the majority left thinking about how to
implement even the most basic advise discussed.
From his consultancy and fire fighter background he has a good overview of what
logging in the average corporate environment looks like: No logging plan, no</description></item><item><title>JAX: Java performance myths</title><link>https://blog.isabel-drost.de/jax-java-performance-myths242/</link><pubDate>Wed, 22 May 2013 20:37:07 +0200</pubDate><guid>https://blog.isabel-drost.de/jax-java-performance-myths242/</guid><description>JAX: Java performance myths # This talk was one of the famous talks on Java performance myths by Arno Haase.
His main point - supported with dozens of illustrative examples was for
software developers to stop trusting in word of mouth, cargo cult like myths
that are abundant among engineers. Again the goal should be to write readable
code above all - for one the Java compiler and JIT are great at optimising.</description></item><item><title>JAX: Does parallel equal performant?</title><link>https://blog.isabel-drost.de/jax-does-parallel-equal-performant239/</link><pubDate>Tue, 21 May 2013 20:34:40 +0200</pubDate><guid>https://blog.isabel-drost.de/jax-does-parallel-equal-performant239/</guid><description>JAX: Does parallel equal performant? # In general there is a tendency to set parallel implementations to being equal
to performant implementations. Except in the really naive case there is always
going to be some overhead due to scheduling work, managing memory sharing and
network communication overhead. Essentially that knowledge is reflected in
Amdahl&amp;rsquo;s law (the amount of serial work limits the benefit from running parts
of your implementation in parallel, http://en.</description></item><item><title>JAX: Pigs, snakes and deaths by 1k cuts</title><link>https://blog.isabel-drost.de/jax-pigs-snakes-and-deaths-by-1k-cuts244/</link><pubDate>Mon, 20 May 2013 20:32:16 +0200</pubDate><guid>https://blog.isabel-drost.de/jax-pigs-snakes-and-deaths-by-1k-cuts244/</guid><description>JAX: Pigs, snakes and deaths by 1k cuts # In his talk on performance problems Rainer Schuppe gave a great introduction to
which kinds of performance problems can be observed in production and how to
best root-cause them.
Simply put performance issues usually arise due to a difference in either data
volumn, concurrency levels or resource usage between the dev, qa and production
environments. The tooling to uncover and explain them is pretty well known:</description></item><item><title>Note to self - Java heap analysis</title><link>https://blog.isabel-drost.de/note-to-self-java-heap-analysis295/</link><pubDate>Thu, 09 Feb 2012 21:30:21 +0100</pubDate><guid>https://blog.isabel-drost.de/note-to-self-java-heap-analysis295/</guid><description>Note to self - Java heap analysis # As I keep searching for those URLs over and over again linking them here. When running into JVM heap issues (an out of memory exception is a pretty sure sign, so can be the program getting slower and slower over time) there&amp;rsquo;s a few things you can do for analysis:
Start with telling the effected JVM process to output some statistics on heap layout as well as thread state by sending it a SIGQUIT (if you want to use the number instead - it&amp;rsquo;s 3 - avoid typing 9 instead ;) ).</description></item><item><title>Devoxx – Day one – Java, Performance and Devops</title><link>https://blog.isabel-drost.de/devoxx-day-one-java-performance-and-devops155/</link><pubDate>Wed, 15 Dec 2010 21:22:06 +0100</pubDate><guid>https://blog.isabel-drost.de/devoxx-day-one-java-performance-and-devops155/</guid><description>Devoxx – Day one – Java, Performance and Devops # In his keynote Mark Reinhold provided some information on the very interesting features to be included in the Java 7 release. Generics will be easier to declare with the diamond operator. Nested try-finally constructs that are nowadays needed to safely close resources will no longer be necessary – their will be the option of implementing a Closeable interface supporting a method close() that get&amp;rsquo;s called whenever objects of that class&amp;rsquo;s type go out of scope.</description></item><item><title>Devoxx – Day three</title><link>https://blog.isabel-drost.de/devoxx-day-three156/</link><pubDate>Fri, 10 Dec 2010 21:28:26 +0100</pubDate><guid>https://blog.isabel-drost.de/devoxx-day-three156/</guid><description>Devoxx – Day three # The panel discussion on the future of Java was driven by visitor submitted and voted questions on the current state and future of Java. The general take-aways for me included the clear statement that the TCK will never be made available to the ASF. The promise of Oracle to continue supporting the Java community and remaining active in the JCP.
There was some discussion on whether coming Java versions should be backwards-incompatible.</description></item><item><title>Devoxx – Day two – Caching</title><link>https://blog.isabel-drost.de/devoxx-day-two-caching157/</link><pubDate>Tue, 07 Dec 2010 21:22:10 +0100</pubDate><guid>https://blog.isabel-drost.de/devoxx-day-two-caching157/</guid><description>Devoxx – Day two – Caching # Day two started with a really good talk on caching architectures by Greg Luck. He first motivated why caching works: Even with SSIDs being available now there is still a huge performance gap between RAM access times and having to go to disk. The issue is even worse in systems that are architected in a distributed way making frequent calls to remote systems.</description></item><item><title>Devoxx Antwerp</title><link>https://blog.isabel-drost.de/devoxx-antwerp153/</link><pubDate>Fri, 03 Dec 2010 21:16:07 +0100</pubDate><guid>https://blog.isabel-drost.de/devoxx-antwerp153/</guid><description>Devoxx Antwerp # With 3000 attendees Devoxx is the largest Java Community conference world-wide. Each year in autumn it takes place in Antwerp/ Belgium, in recent years in the Metropolis cinema. The conference tickets were sold out long before doors were opened this year.
The focus of the presentations are mainly on enterprise Java featuring talks by famous Joshua Bloch, Mark Reihnhold and others on new features of the upcoming JDK release as well as intricacies of the Java programming language itself.</description></item><item><title>Books I found particularly helpful</title><link>https://blog.isabel-drost.de/books-i-found-particularly-helpful128/</link><pubDate>Thu, 12 Mar 2009 18:44:44 +0100</pubDate><guid>https://blog.isabel-drost.de/books-i-found-particularly-helpful128/</guid><description>Books I found particularly helpful # During the last few years I have quite a few books that one could easily file under the category &amp;ldquo;Hacking books&amp;rdquo;. Some of them were particularly interesting to me and have influenced the way I write code. The following list certainly is not complete at all - but it is a nice starting point.
Effective C++ - I have comparably little experience with C++ but this book really helped understand some of the particularities.</description></item><item><title>Erlang User Group - Scala</title><link>https://blog.isabel-drost.de/erlang-user-group-scala169/</link><pubDate>Mon, 09 Mar 2009 12:25:32 +0100</pubDate><guid>https://blog.isabel-drost.de/erlang-user-group-scala169/</guid><description>Erlang User Group - Scala # What: Scala Presentation by Stefan Plantikow.
Where: Cockpit of the Box119 http://boxhagener119.de/ (Ring at UPSTREAM)
When: Wednesday, 11.03.2009, 8:00 p.m. Yesterday the Erlounge, organised by Jan Lehnardt, took place in the Cockpit of Box119 in Berlin. Topic of the evening was an introduction to Scala.
Scala is a functional language that compiles to Java Bytecode and runs on the JVM. It tries to combine the best from two worlds: Object oriented languages and functional programming.</description></item></channel></rss>