<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apache HBase on Inductive Bias</title><link>https://blog.isabel-drost.de/tags/Apache-HBase/</link><description>Recent content in Apache HBase on Inductive Bias</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 17 Feb 2011 20:17:48 +0100</lastBuildDate><atom:link href="https://blog.isabel-drost.de/tags/Apache-HBase/index.xml" rel="self" type="application/rss+xml"/><item><title>FOSDEM - HBase at Facebook Messaging</title><link>https://blog.isabel-drost.de/fosdem-hbase-at-facebook-messaging180/</link><pubDate>Thu, 17 Feb 2011 20:17:48 +0100</pubDate><guid>https://blog.isabel-drost.de/fosdem-hbase-at-facebook-messaging180/</guid><description>FOSDEM - HBase at Facebook Messaging # Nicolas Spiegelberg gave an awesome introduction not only to the architecture that powers Facebook messaging but also to the design decisions behind their use of Apache HBase as a storage backend. Disclaimer: HBase is being used for message storage, for attachements with Haystack a different backend is used.
The reasons to go for HBase include its strong consistency model, support for auto failover, load balancing of shards, support for compression, atomic read-modify-write support and the inherent Map/Reduce support.</description></item></channel></rss>