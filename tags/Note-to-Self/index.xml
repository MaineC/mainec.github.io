<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Note to Self on Inductive Bias</title><link>https://blog.isabel-drost.de/tags/Note-to-Self/</link><description>Recent content in Note to Self on Inductive Bias</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 23 Mar 2014 18:26:47 +0100</lastBuildDate><atom:link href="https://blog.isabel-drost.de/tags/Note-to-Self/index.xml" rel="self" type="application/rss+xml"/><item><title>Note to self: Backup bottlenecks</title><link>https://blog.isabel-drost.de/note-to-self-backup-bottlenecks/</link><pubDate>Sun, 23 Mar 2014 18:26:47 +0100</pubDate><guid>https://blog.isabel-drost.de/note-to-self-backup-bottlenecks/</guid><description>Note to self: Backup bottlenecks # I learnt the following relations the hard way 10 years ago when trying to backup a rather tiny amount of data, went through the computation again three years ago. Still I had to re-do the computation this morning when trying to pull a final full backup from my old MacBook. Posting here for future reference:
Note 1: Some numbers like 10BASE-T included only for historic reference.</description></item><item><title>Note to self: Basic R operations</title><link>https://blog.isabel-drost.de/note-to-self-basic-r-operations297/</link><pubDate>Thu, 18 Oct 2012 22:55:53 +0200</pubDate><guid>https://blog.isabel-drost.de/note-to-self-basic-r-operations297/</guid><description>Note to self: Basic R operations # After searching for that all too often and for too long (in particular the &amp;ldquo;add a column as index&amp;rdquo; bit):
To read a file: d &amp;lt;- read.table(&amp;rsquo;/home/isabel/input&amp;rsquo;, sep=&amp;rsquo;,&amp;rsquo;, header=T, quote=&amp;rsquo;&amp;rsquo;)
Useful for getting an overview of the data:summary(d); head(d); tail(d)
For sorting some data frame: s &amp;lt;- d[order(d[,2]),];
For adding a column to a data frame: s$idx &amp;lt;- seq(0, nrow(s) - 1, 1)</description></item><item><title>Note to self - link to 3D maps</title><link>https://blog.isabel-drost.de/note-to-self-link-to-3d-maps296/</link><pubDate>Mon, 24 Sep 2012 08:39:15 +0200</pubDate><guid>https://blog.isabel-drost.de/note-to-self-link-to-3d-maps296/</guid><description>Note to self - link to 3D maps # After searching for the link the third time today - just in case I happen to be again looking for Nokia&amp;rsquo;s 3d maps: http://maps3d.svc.nokia.com/webgl/index.html is the non-plugin link that works in Firefox.</description></item><item><title>Note to self: Clojure with Vim and Maven</title><link>https://blog.isabel-drost.de/note-to-self-clojure-with-vim-and-maven298/</link><pubDate>Tue, 17 Jul 2012 20:07:55 +0200</pubDate><guid>https://blog.isabel-drost.de/note-to-self-clojure-with-vim-and-maven298/</guid><description>Note to self: Clojure with Vim and Maven # Steps to get a somewhat working Clojure environment with vim:
Install the current vimclojure plugin.
Get and install a nailgun client.
Add vimclojure to your clojure project pom.xml.
Start the nailgun server from within your maven project with mvn clojure:nailgun with the maven clojure plugin.
Finally start vim, open your favourite clojure file - you can open a REPL with \sr, when in a function definition you can evaluate that with \et - see also tamining vim clojure</description></item><item><title>Second steps with git</title><link>https://blog.isabel-drost.de/second-steps-with-git362/</link><pubDate>Sun, 22 Apr 2012 20:34:46 +0200</pubDate><guid>https://blog.isabel-drost.de/second-steps-with-git362/</guid><description>Second steps with git # Leaving this here in case I&amp;rsquo;ll search for it later again - and I&amp;rsquo;m pretty sure I will.
The following is a simplification of the git workflow detailed earlier - in particular the first two steps and a little background.
When dealing with remotes the git remote documentation is very useful.
When sharing your changes with others the git tutorial on sharing changes is very helpful.</description></item><item><title>Note to self - Java heap analysis</title><link>https://blog.isabel-drost.de/note-to-self-java-heap-analysis295/</link><pubDate>Thu, 09 Feb 2012 21:30:21 +0100</pubDate><guid>https://blog.isabel-drost.de/note-to-self-java-heap-analysis295/</guid><description>Note to self - Java heap analysis # As I keep searching for those URLs over and over again linking them here. When running into JVM heap issues (an out of memory exception is a pretty sure sign, so can be the program getting slower and slower over time) there&amp;rsquo;s a few things you can do for analysis:
Start with telling the effected JVM process to output some statistics on heap layout as well as thread state by sending it a SIGQUIT (if you want to use the number instead - it&amp;rsquo;s 3 - avoid typing 9 instead ;) ).</description></item><item><title>Note to self: svn:ignore usage</title><link>https://blog.isabel-drost.de/note-to-self-svnignore-usage299/</link><pubDate>Fri, 25 Feb 2011 20:47:54 +0100</pubDate><guid>https://blog.isabel-drost.de/note-to-self-svnignore-usage299/</guid><description>Note to self: svn:ignore usage # Putting the information here to make retrieving it a bit easier next time.
When working with svn and some random IDE I&amp;rsquo;d really love to avoid checking in any files that are IDE specific (project configuration, classpath, etc.). The command to do that:
svn propedit svn:ignore $directory_to_edit
After issuing this command you&amp;rsquo;ll be prompted to enter file patterns for files to ignore or the directory names.</description></item><item><title>First steps with git</title><link>https://blog.isabel-drost.de/first-steps-with-git177/</link><pubDate>Sat, 30 Oct 2010 19:47:00 +0200</pubDate><guid>https://blog.isabel-drost.de/first-steps-with-git177/</guid><description>First steps with git # A few weeks ago I started to use git not only for tracking changes in my own private repository but also for Mahout development and for reviewing patches. My setup probably is a bit unusual, so I thought, I&amp;rsquo;d first describe that before diving deeper into the specifc steps.
Workflow to implement
With my development I wanted to follow Mahout trunk very closely, integrating and merging any changes as soon as I continue to work on the code.</description></item><item><title>Building a Hadoop Job Jar with Maven</title><link>https://blog.isabel-drost.de/building-a-hadoop-job-jar-with-maven129/</link><pubDate>Thu, 11 Mar 2010 19:16:14 +0100</pubDate><guid>https://blog.isabel-drost.de/building-a-hadoop-job-jar-with-maven129/</guid><description>Building a Hadoop Job Jar with Maven # Put here as a reminder, so I do not forget about it. There is a really nice tutorial online on Building Hadoop Job with Maven.</description></item></channel></rss>