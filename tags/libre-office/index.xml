<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>libre office on Inductive Bias</title><link>https://blog.isabel-drost.de/tags/libre-office/</link><description>Recent content in libre office on Inductive Bias</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 19 Feb 2013 20:47:10 +0100</lastBuildDate><atom:link href="https://blog.isabel-drost.de/tags/libre-office/index.xml" rel="self" type="application/rss+xml"/><item><title>On making Libre Office suck less – a major refactoring effort - FOSDEM 08</title><link>https://blog.isabel-drost.de/on-making-libre-office-suck-less-a-major-refactoring-effort-fosdem-08307/</link><pubDate>Tue, 19 Feb 2013 20:47:10 +0100</pubDate><guid>https://blog.isabel-drost.de/on-making-libre-office-suck-less-a-major-refactoring-effort-fosdem-08307/</guid><description>On making Libre Office suck less – a major refactoring effort - FOSDEM 08 # Libre Office is currently in a phase of code cleanup and refactoring that turns the whole code base upside down. What that means is that people need tooling to avoid quality from going down and allow for new features going in without too much risk. The project made good experiences with using gerrit for code review of patches, tinderbox for fast integration testing, strict whitespace checks to avoid unintended mistakes, use clang compiler plugins.</description></item></channel></rss>