<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>clojure on Inductive Bias</title><link>https://blog.isabel-drost.de/tags/clojure/</link><description>Recent content in clojure on Inductive Bias</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 17 Jul 2012 20:07:55 +0200</lastBuildDate><atom:link href="https://blog.isabel-drost.de/tags/clojure/index.xml" rel="self" type="application/rss+xml"/><item><title>Note to self: Clojure with Vim and Maven</title><link>https://blog.isabel-drost.de/note-to-self-clojure-with-vim-and-maven298/</link><pubDate>Tue, 17 Jul 2012 20:07:55 +0200</pubDate><guid>https://blog.isabel-drost.de/note-to-self-clojure-with-vim-and-maven298/</guid><description>Note to self: Clojure with Vim and Maven # Steps to get a somewhat working Clojure environment with vim:
Install the current vimclojure plugin.
Get and install a nailgun client.
Add vimclojure to your clojure project pom.xml.
Start the nailgun server from within your maven project with mvn clojure:nailgun with the maven clojure plugin.
Finally start vim, open your favourite clojure file - you can open a REPL with \sr, when in a function definition you can evaluate that with \et - see also tamining vim clojure</description></item><item><title>Clojure Berlin - March 2012</title><link>https://blog.isabel-drost.de/clojure-berlin-march-2012139/</link><pubDate>Wed, 07 Mar 2012 22:37:03 +0100</pubDate><guid>https://blog.isabel-drost.de/clojure-berlin-march-2012139/</guid><description>Clojure Berlin - March 2012 # In today&amp;rsquo;s Clojure meetup Stefan Hübner gave an introduction to Cascalog - a Clojure library based on Cascading for large scale data processing on Apache Hadoop without hassle.
After a brief overview of what he is using the tool for to do log processing at his day job for http://maps.nokia.com Stefan went into some more detail on why he chose Cascalog over other project that provide abstraction layers on top of Hadoop&amp;rsquo;s plain map/reduce library: Both Pig and Hive provide easy to learn SQL-like languages to quickly write analysis jobs.</description></item><item><title>Clojure in Berlin</title><link>https://blog.isabel-drost.de/clojure-in-berlin140/</link><pubDate>Thu, 02 Feb 2012 00:01:53 +0100</pubDate><guid>https://blog.isabel-drost.de/clojure-in-berlin140/</guid><description>Clojure in Berlin # Though I had the chance to tinker with some Clojure code only briefly it&amp;rsquo;s programming model and the resulting compact programs do fascinate me. As the resulting code runs on a JVM and does integrate well with existing Java libraries migration is comparably cheap and easy.
Today I finally managed to attend the local Berlin Clojure meetup, co-organised by Stefan Hübner and Fronx. Timing couldn&amp;rsquo;t have been much better: In this evenings event Philip Potter from Thoughtworks introduced Overtone - a library for making music with Clojure.</description></item></channel></rss>